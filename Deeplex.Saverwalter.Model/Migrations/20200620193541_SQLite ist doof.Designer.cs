// <auto-generated />
using System;
using Deeplex.Saverwalter.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Deeplex.Saverwalter.Model.Migrations
{
    [DbContext(typeof(SaverwalterContext))]
    [Migration("20200620193541_SQLite ist doof")]
    partial class SQLiteistdoof
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Adresse", b =>
                {
                    b.Property<int>("AdresseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hausnummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<string>("Postleitzahl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Stadt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Strasse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AdresseId");

                    b.ToTable("Adressen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Anhang", b =>
                {
                    b.Property<Guid>("AnhangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("ContentType")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Sha256Hash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("AnhangId");

                    b.ToTable("Anhaenge");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Betriebskostenrechnung", b =>
                {
                    b.Property<int>("BetriebskostenrechnungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Beschreibung")
                        .HasColumnType("TEXT");

                    b.Property<double>("Betrag")
                        .HasColumnType("REAL");

                    b.Property<int>("BetreffendesJahr")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<int>("Schluessel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Typ")
                        .HasColumnType("INTEGER");

                    b.HasKey("BetriebskostenrechnungId");

                    b.ToTable("Betriebskostenrechnungen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Betriebskostenrechnungsgruppe", b =>
                {
                    b.Property<int>("BetriebskostenrechnungsgruppeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RechnungBetriebskostenrechnungId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WohnungId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BetriebskostenrechnungsgruppeId");

                    b.HasIndex("RechnungBetriebskostenrechnungId");

                    b.HasIndex("WohnungId");

                    b.ToTable("Betriebskostenrechnungsgruppen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Garage", b =>
                {
                    b.Property<int>("GarageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdresseId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("BesitzerId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("JuristischePersonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Kennung")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.HasKey("GarageId");

                    b.HasIndex("AdresseId");

                    b.HasIndex("JuristischePersonId");

                    b.ToTable("Garagen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.JuristischePerson", b =>
                {
                    b.Property<int>("JuristischePersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AdresseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Anrede")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fax")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mobil")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isHandwerker")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isMieter")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isVermieter")
                        .HasColumnType("INTEGER");

                    b.HasKey("JuristischePersonId");

                    b.HasAlternateKey("PersonId");

                    b.HasIndex("AdresseId");

                    b.ToTable("JuristischePersonen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.JuristischePersonenMitglied", b =>
                {
                    b.Property<int>("JuristischePersonenMitgliedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("JuristischePersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NatuerlichePersonId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("TEXT");

                    b.HasKey("JuristischePersonenMitgliedId");

                    b.HasIndex("JuristischePersonId");

                    b.HasIndex("NatuerlichePersonId");

                    b.ToTable("JuristischePersonenMitglied");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Konto", b =>
                {
                    b.Property<int>("KontoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bank")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.HasKey("KontoId");

                    b.ToTable("Kontos");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.MietMinderung", b =>
                {
                    b.Property<int>("MietMinderungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Beginn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Ende")
                        .HasColumnType("TEXT");

                    b.Property<double>("Minderung")
                        .HasColumnType("REAL");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VertragId")
                        .HasColumnType("TEXT");

                    b.HasKey("MietMinderungId");

                    b.ToTable("MietMinderungen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Miete", b =>
                {
                    b.Property<int>("MieteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Betrag")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("BetreffenderMonat")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VertragId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Zahlungsdatum")
                        .HasColumnType("TEXT");

                    b.HasKey("MieteId");

                    b.ToTable("Mieten");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Mieter", b =>
                {
                    b.Property<int>("MieterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VertragId")
                        .HasColumnType("TEXT");

                    b.HasKey("MieterId");

                    b.ToTable("MieterSet");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.MietobjektGarage", b =>
                {
                    b.Property<int>("MietobjektGarageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GarageId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("VertragId")
                        .HasColumnType("TEXT");

                    b.HasKey("MietobjektGarageId");

                    b.HasIndex("GarageId");

                    b.ToTable("MietobjektGaragen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.NatuerlichePerson", b =>
                {
                    b.Property<int>("NatuerlichePersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AdresseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Anrede")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fax")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mobil")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vorname")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isHandwerker")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isMieter")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isVermieter")
                        .HasColumnType("INTEGER");

                    b.HasKey("NatuerlichePersonId");

                    b.HasAlternateKey("PersonId");

                    b.HasIndex("AdresseId");

                    b.ToTable("NatuerlichePersonen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Vertrag", b =>
                {
                    b.Property<int>("rowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("AnsprechpartnerId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Beginn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Ende")
                        .HasColumnType("TEXT");

                    b.Property<double>("KaltMiete")
                        .HasColumnType("REAL");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<int>("Personenzahl")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VersionsNotiz")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VertragId")
                        .HasColumnType("TEXT");

                    b.Property<int>("WohnungId")
                        .HasColumnType("INTEGER");

                    b.HasKey("rowid");

                    b.HasAlternateKey("VertragId", "Version");

                    b.HasIndex("WohnungId");

                    b.ToTable("Vertraege");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Wohnung", b =>
                {
                    b.Property<int>("WohnungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdresseId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("BesitzerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("JuristischePersonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<int>("Nutzeinheit")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Nutzflaeche")
                        .HasColumnType("REAL");

                    b.Property<double>("Wohnflaeche")
                        .HasColumnType("REAL");

                    b.HasKey("WohnungId");

                    b.HasIndex("AdresseId");

                    b.HasIndex("JuristischePersonId");

                    b.ToTable("Wohnungen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Zaehler", b =>
                {
                    b.Property<int>("ZaehlerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Kennnummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<int>("Typ")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WohnungId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ZaehlerId");

                    b.HasIndex("WohnungId");

                    b.ToTable("ZaehlerSet");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Zaehlerstand", b =>
                {
                    b.Property<int>("ZaehlerstandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Abgelesen")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<double>("Stand")
                        .HasColumnType("REAL");

                    b.Property<int>("ZaehlerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ZaehlerstandId");

                    b.HasIndex("ZaehlerId");

                    b.ToTable("Zaehlerstaende");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Betriebskostenrechnungsgruppe", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Betriebskostenrechnung", "Rechnung")
                        .WithMany("Gruppen")
                        .HasForeignKey("RechnungBetriebskostenrechnungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.Wohnung", "Wohnung")
                        .WithMany("Betriebskostenrechnungsgruppen")
                        .HasForeignKey("WohnungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Garage", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Adresse", "Adresse")
                        .WithMany("Garagen")
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.JuristischePerson", null)
                        .WithMany("Garagen")
                        .HasForeignKey("JuristischePersonId");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.JuristischePerson", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Adresse", "Adresse")
                        .WithMany()
                        .HasForeignKey("AdresseId");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.JuristischePersonenMitglied", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.JuristischePerson", "JuristischePerson")
                        .WithMany("Mitglieder")
                        .HasForeignKey("JuristischePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.NatuerlichePerson", null)
                        .WithMany("JuristischePersonen")
                        .HasForeignKey("NatuerlichePersonId");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.MietobjektGarage", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Garage", "Garage")
                        .WithMany()
                        .HasForeignKey("GarageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.NatuerlichePerson", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Adresse", "Adresse")
                        .WithMany()
                        .HasForeignKey("AdresseId");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Vertrag", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Wohnung", "Wohnung")
                        .WithMany("Vertraege")
                        .HasForeignKey("WohnungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Wohnung", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Adresse", "Adresse")
                        .WithMany("Wohnungen")
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.JuristischePerson", null)
                        .WithMany("Wohnungen")
                        .HasForeignKey("JuristischePersonId");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Zaehler", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Wohnung", "Wohnung")
                        .WithMany("Zaehler")
                        .HasForeignKey("WohnungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Zaehlerstand", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Zaehler", "Zaehler")
                        .WithMany("Staende")
                        .HasForeignKey("ZaehlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
