// <auto-generated />
using System;
using Deeplex.Saverwalter.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Deeplex.Saverwalter.Model.Migrations
{
    [DbContext(typeof(SaverwalterContext))]
    [Migration("20220508210316_AddBetriebskostenrechnungWohnung")]
    partial class AddBetriebskostenrechnungWohnung
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("BetriebskostenrechnungWohnung", b =>
                {
                    b.Property<int>("BetriebskostenrechnungenBetriebskostenrechnungId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WohnungenWohnungId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BetriebskostenrechnungenBetriebskostenrechnungId", "WohnungenWohnungId");

                    b.HasIndex("WohnungenWohnungId");

                    b.ToTable("BetriebskostenrechnungWohnung");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Adresse", b =>
                {
                    b.Property<int>("AdresseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hausnummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<string>("Postleitzahl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Stadt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Strasse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AdresseId");

                    b.ToTable("Adressen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.AdresseAnhang", b =>
                {
                    b.Property<int>("AdresseAnhangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AnhangId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TargetAdresseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AdresseAnhangId");

                    b.HasIndex("AnhangId");

                    b.HasIndex("TargetAdresseId");

                    b.ToTable("AdresseAnhaenge");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Anhang", b =>
                {
                    b.Property<Guid>("AnhangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContentType")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Sha256Hash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("AnhangId");

                    b.ToTable("Anhaenge");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Betriebskostenrechnung", b =>
                {
                    b.Property<int>("BetriebskostenrechnungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Beschreibung")
                        .HasColumnType("TEXT");

                    b.Property<double>("Betrag")
                        .HasColumnType("REAL");

                    b.Property<int>("BetreffendesJahr")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<double?>("HKVO_P7")
                        .HasColumnType("REAL");

                    b.Property<double?>("HKVO_P8")
                        .HasColumnType("REAL");

                    b.Property<int?>("HKVO_P9")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<int>("Schluessel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Typ")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ZaehlerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BetriebskostenrechnungId");

                    b.HasIndex("ZaehlerId");

                    b.ToTable("Betriebskostenrechnungen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.BetriebskostenrechnungAnhang", b =>
                {
                    b.Property<int>("BetriebskostenrechnungAnhangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AnhangId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TargetBetriebskostenrechnungId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BetriebskostenrechnungAnhangId");

                    b.HasIndex("AnhangId");

                    b.HasIndex("TargetBetriebskostenrechnungId");

                    b.ToTable("BetriebskostenrechnungAnhaenge");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Erhaltungsaufwendung", b =>
                {
                    b.Property<int>("ErhaltungsaufwendungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AusstellerId")
                        .HasColumnType("TEXT");

                    b.Property<double>("Betrag")
                        .HasColumnType("REAL");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<int>("WohnungId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ErhaltungsaufwendungId");

                    b.HasIndex("WohnungId");

                    b.ToTable("Erhaltungsaufwendungen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.ErhaltungsaufwendungAnhang", b =>
                {
                    b.Property<int>("ErhaltungsaufwendungAnhangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AnhangId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TargetErhaltungsaufwendungId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ErhaltungsaufwendungAnhangId");

                    b.HasIndex("AnhangId");

                    b.HasIndex("TargetErhaltungsaufwendungId");

                    b.ToTable("ErhaltungsaufwendungAnhaenge");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Garage", b =>
                {
                    b.Property<int>("GarageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdresseId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("BesitzerId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("JuristischePersonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Kennung")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.HasKey("GarageId");

                    b.HasIndex("AdresseId");

                    b.HasIndex("JuristischePersonId");

                    b.ToTable("Garagen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.GarageAnhang", b =>
                {
                    b.Property<int>("GarageAnhangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AnhangId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TargetGarageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GarageAnhangId");

                    b.HasIndex("AnhangId");

                    b.HasIndex("TargetGarageId");

                    b.ToTable("GarageAnhaenge");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.JuristischePerson", b =>
                {
                    b.Property<int>("JuristischePersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AdresseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Anrede")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fax")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mobil")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isHandwerker")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isMieter")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isVermieter")
                        .HasColumnType("INTEGER");

                    b.HasKey("JuristischePersonId");

                    b.HasAlternateKey("PersonId");

                    b.HasIndex("AdresseId");

                    b.ToTable("JuristischePersonen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.JuristischePersonAnhang", b =>
                {
                    b.Property<int>("JuristischePersonAnhangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AnhangId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TargetJuristischePersonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("JuristischePersonAnhangId");

                    b.HasIndex("AnhangId");

                    b.HasIndex("TargetJuristischePersonId");

                    b.ToTable("JuristischePersonAnhaenge");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.JuristischePersonenMitglied", b =>
                {
                    b.Property<int>("JuristischePersonenMitgliedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("JuristischePersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NatuerlichePersonId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("TEXT");

                    b.HasKey("JuristischePersonenMitgliedId");

                    b.HasIndex("JuristischePersonId");

                    b.HasIndex("NatuerlichePersonId");

                    b.ToTable("JuristischePersonenMitglieder");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Konto", b =>
                {
                    b.Property<int>("KontoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bank")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.HasKey("KontoId");

                    b.ToTable("Kontos");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.KontoAnhang", b =>
                {
                    b.Property<int>("KontoAnhangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AnhangId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TargetKontoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("KontoAnhangId");

                    b.HasIndex("AnhangId");

                    b.HasIndex("TargetKontoId");

                    b.ToTable("KontoAnhaenge");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.MietMinderung", b =>
                {
                    b.Property<int>("MietMinderungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Beginn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Ende")
                        .HasColumnType("TEXT");

                    b.Property<double>("Minderung")
                        .HasColumnType("REAL");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VertragId")
                        .HasColumnType("TEXT");

                    b.HasKey("MietMinderungId");

                    b.ToTable("MietMinderungen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.MietMinderungAnhang", b =>
                {
                    b.Property<int>("MietMinderungAnhangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AnhangId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TargetMietMinderungId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MietMinderungAnhangId");

                    b.HasIndex("AnhangId");

                    b.HasIndex("TargetMietMinderungId");

                    b.ToTable("MietMinderungAnhaenge");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Miete", b =>
                {
                    b.Property<int>("MieteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Betrag")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("BetreffenderMonat")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VertragId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Zahlungsdatum")
                        .HasColumnType("TEXT");

                    b.HasKey("MieteId");

                    b.ToTable("Mieten");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.MieteAnhang", b =>
                {
                    b.Property<int>("MieteAnhangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AnhangId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TargetMieteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MieteAnhangId");

                    b.HasIndex("AnhangId");

                    b.HasIndex("TargetMieteId");

                    b.ToTable("MieteAnhaenge");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Mieter", b =>
                {
                    b.Property<int>("MieterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VertragId")
                        .HasColumnType("TEXT");

                    b.HasKey("MieterId");

                    b.ToTable("MieterSet");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.MietobjektGarage", b =>
                {
                    b.Property<int>("MietobjektGarageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GarageId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("VertragId")
                        .HasColumnType("TEXT");

                    b.HasKey("MietobjektGarageId");

                    b.HasIndex("GarageId");

                    b.ToTable("MietobjektGaragen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.NatuerlichePerson", b =>
                {
                    b.Property<int>("NatuerlichePersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AdresseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Anrede")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fax")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mobil")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .HasColumnType("TEXT");

                    b.Property<int>("Titel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Vorname")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isHandwerker")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isMieter")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isVermieter")
                        .HasColumnType("INTEGER");

                    b.HasKey("NatuerlichePersonId");

                    b.HasAlternateKey("PersonId");

                    b.HasIndex("AdresseId");

                    b.ToTable("NatuerlichePersonen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.NatuerlichePersonAnhang", b =>
                {
                    b.Property<int>("NatuerlichePersonAnhangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AnhangId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TargetNatuerlichePersonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("NatuerlichePersonAnhangId");

                    b.HasIndex("AnhangId");

                    b.HasIndex("TargetNatuerlichePersonId");

                    b.ToTable("NatuerlichePersonAnhaenge");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Vertrag", b =>
                {
                    b.Property<int>("rowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("AnsprechpartnerId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Beginn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Ende")
                        .HasColumnType("TEXT");

                    b.Property<double>("KaltMiete")
                        .HasColumnType("REAL");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<int>("Personenzahl")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VersionsNotiz")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VertragId")
                        .HasColumnType("TEXT");

                    b.Property<int>("WohnungId")
                        .HasColumnType("INTEGER");

                    b.HasKey("rowid");

                    b.HasAlternateKey("VertragId", "Version");

                    b.HasIndex("WohnungId");

                    b.ToTable("Vertraege");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.VertragAnhang", b =>
                {
                    b.Property<int>("VertragAnhangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AnhangId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Target")
                        .HasColumnType("TEXT");

                    b.HasKey("VertragAnhangId");

                    b.HasIndex("AnhangId");

                    b.ToTable("VertragAnhaenge");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Wohnung", b =>
                {
                    b.Property<int>("WohnungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdresseId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("BesitzerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("JuristischePersonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<int>("Nutzeinheit")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Nutzflaeche")
                        .HasColumnType("REAL");

                    b.Property<double>("Wohnflaeche")
                        .HasColumnType("REAL");

                    b.HasKey("WohnungId");

                    b.HasIndex("AdresseId");

                    b.HasIndex("JuristischePersonId");

                    b.ToTable("Wohnungen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.WohnungAnhang", b =>
                {
                    b.Property<int>("WohnungAnhangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AnhangId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TargetWohnungId")
                        .HasColumnType("INTEGER");

                    b.HasKey("WohnungAnhangId");

                    b.HasIndex("AnhangId");

                    b.HasIndex("TargetWohnungId");

                    b.ToTable("WohnungAnhaenge");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Zaehler", b =>
                {
                    b.Property<int>("ZaehlerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AllgemeinZaehlerZaehlerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Kennnummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<int>("Typ")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WohnungId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ZaehlerId");

                    b.HasIndex("AllgemeinZaehlerZaehlerId");

                    b.HasIndex("WohnungId");

                    b.ToTable("ZaehlerSet");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.ZaehlerAnhang", b =>
                {
                    b.Property<int>("ZaehlerAnhangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AnhangId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TargetZaehlerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ZaehlerAnhangId");

                    b.HasIndex("AnhangId");

                    b.HasIndex("TargetZaehlerId");

                    b.ToTable("ZaehlerAnhaenge");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Zaehlerstand", b =>
                {
                    b.Property<int>("ZaehlerstandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notiz")
                        .HasColumnType("TEXT");

                    b.Property<double>("Stand")
                        .HasColumnType("REAL");

                    b.Property<int>("ZaehlerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ZaehlerstandId");

                    b.HasIndex("ZaehlerId");

                    b.ToTable("Zaehlerstaende");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.ZaehlerstandAnhang", b =>
                {
                    b.Property<int>("ZaehlerstandAnhangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AnhangId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TargetZaehlerstandId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ZaehlerstandAnhangId");

                    b.HasIndex("AnhangId");

                    b.HasIndex("TargetZaehlerstandId");

                    b.ToTable("ZaehlerstandAnhaenge");
                });

            modelBuilder.Entity("BetriebskostenrechnungWohnung", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Betriebskostenrechnung", null)
                        .WithMany()
                        .HasForeignKey("BetriebskostenrechnungenBetriebskostenrechnungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.Wohnung", null)
                        .WithMany()
                        .HasForeignKey("WohnungenWohnungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.AdresseAnhang", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Anhang", "Anhang")
                        .WithMany()
                        .HasForeignKey("AnhangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.Adresse", "Target")
                        .WithMany()
                        .HasForeignKey("TargetAdresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anhang");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Betriebskostenrechnung", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Zaehler", "Zaehler")
                        .WithMany()
                        .HasForeignKey("ZaehlerId");

                    b.Navigation("Zaehler");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.BetriebskostenrechnungAnhang", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Anhang", "Anhang")
                        .WithMany()
                        .HasForeignKey("AnhangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.Betriebskostenrechnung", "Target")
                        .WithMany()
                        .HasForeignKey("TargetBetriebskostenrechnungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anhang");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Erhaltungsaufwendung", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Wohnung", "Wohnung")
                        .WithMany("Erhaltungsaufwendungen")
                        .HasForeignKey("WohnungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wohnung");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.ErhaltungsaufwendungAnhang", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Anhang", "Anhang")
                        .WithMany()
                        .HasForeignKey("AnhangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.Erhaltungsaufwendung", "Target")
                        .WithMany()
                        .HasForeignKey("TargetErhaltungsaufwendungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anhang");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Garage", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Adresse", "Adresse")
                        .WithMany("Garagen")
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.JuristischePerson", null)
                        .WithMany("Garagen")
                        .HasForeignKey("JuristischePersonId");

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.GarageAnhang", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Anhang", "Anhang")
                        .WithMany()
                        .HasForeignKey("AnhangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.Garage", "Target")
                        .WithMany()
                        .HasForeignKey("TargetGarageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anhang");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.JuristischePerson", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Adresse", "Adresse")
                        .WithMany()
                        .HasForeignKey("AdresseId");

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.JuristischePersonAnhang", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Anhang", "Anhang")
                        .WithMany()
                        .HasForeignKey("AnhangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.JuristischePerson", "Target")
                        .WithMany()
                        .HasForeignKey("TargetJuristischePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anhang");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.JuristischePersonenMitglied", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.JuristischePerson", "JuristischePerson")
                        .WithMany("Mitglieder")
                        .HasForeignKey("JuristischePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.NatuerlichePerson", null)
                        .WithMany("JuristischePersonen")
                        .HasForeignKey("NatuerlichePersonId");

                    b.Navigation("JuristischePerson");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.KontoAnhang", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Anhang", "Anhang")
                        .WithMany()
                        .HasForeignKey("AnhangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.Konto", "Target")
                        .WithMany()
                        .HasForeignKey("TargetKontoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anhang");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.MietMinderungAnhang", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Anhang", "Anhang")
                        .WithMany()
                        .HasForeignKey("AnhangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.MietMinderung", "Target")
                        .WithMany()
                        .HasForeignKey("TargetMietMinderungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anhang");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.MieteAnhang", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Anhang", "Anhang")
                        .WithMany()
                        .HasForeignKey("AnhangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.Miete", "Target")
                        .WithMany()
                        .HasForeignKey("TargetMieteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anhang");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.MietobjektGarage", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Garage", "Garage")
                        .WithMany()
                        .HasForeignKey("GarageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garage");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.NatuerlichePerson", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Adresse", "Adresse")
                        .WithMany()
                        .HasForeignKey("AdresseId");

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.NatuerlichePersonAnhang", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Anhang", "Anhang")
                        .WithMany()
                        .HasForeignKey("AnhangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.NatuerlichePerson", "Target")
                        .WithMany()
                        .HasForeignKey("TargetNatuerlichePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anhang");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Vertrag", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Wohnung", "Wohnung")
                        .WithMany("Vertraege")
                        .HasForeignKey("WohnungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wohnung");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.VertragAnhang", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Anhang", "Anhang")
                        .WithMany()
                        .HasForeignKey("AnhangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anhang");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Wohnung", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Adresse", "Adresse")
                        .WithMany("Wohnungen")
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.JuristischePerson", null)
                        .WithMany("Wohnungen")
                        .HasForeignKey("JuristischePersonId");

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.WohnungAnhang", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Anhang", "Anhang")
                        .WithMany()
                        .HasForeignKey("AnhangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.Wohnung", "Target")
                        .WithMany()
                        .HasForeignKey("TargetWohnungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anhang");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Zaehler", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Zaehler", "AllgemeinZaehler")
                        .WithMany("EinzelZaehler")
                        .HasForeignKey("AllgemeinZaehlerZaehlerId");

                    b.HasOne("Deeplex.Saverwalter.Model.Wohnung", "Wohnung")
                        .WithMany("Zaehler")
                        .HasForeignKey("WohnungId");

                    b.Navigation("AllgemeinZaehler");

                    b.Navigation("Wohnung");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.ZaehlerAnhang", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Anhang", "Anhang")
                        .WithMany()
                        .HasForeignKey("AnhangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.Zaehler", "Target")
                        .WithMany()
                        .HasForeignKey("TargetZaehlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anhang");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Zaehlerstand", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Zaehler", "Zaehler")
                        .WithMany("Staende")
                        .HasForeignKey("ZaehlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaehler");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.ZaehlerstandAnhang", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Anhang", "Anhang")
                        .WithMany()
                        .HasForeignKey("AnhangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deeplex.Saverwalter.Model.Zaehlerstand", "Target")
                        .WithMany()
                        .HasForeignKey("TargetZaehlerstandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anhang");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Adresse", b =>
                {
                    b.Navigation("Garagen");

                    b.Navigation("Wohnungen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.JuristischePerson", b =>
                {
                    b.Navigation("Garagen");

                    b.Navigation("Mitglieder");

                    b.Navigation("Wohnungen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.NatuerlichePerson", b =>
                {
                    b.Navigation("JuristischePersonen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Wohnung", b =>
                {
                    b.Navigation("Erhaltungsaufwendungen");

                    b.Navigation("Vertraege");

                    b.Navigation("Zaehler");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Zaehler", b =>
                {
                    b.Navigation("EinzelZaehler");

                    b.Navigation("Staende");
                });
#pragma warning restore 612, 618
        }
    }
}
