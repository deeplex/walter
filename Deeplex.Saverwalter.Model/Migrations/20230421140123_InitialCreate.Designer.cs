// <auto-generated />
using System;
using Deeplex.Saverwalter.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Deeplex.Saverwalter.Model.Migrations
{
    [DbContext(typeof(SaverwalterContext))]
    [Migration("20230421140123_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Adresse", b =>
                {
                    b.Property<int>("AdresseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("adresseid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AdresseId"));

                    b.Property<string>("Hausnummer")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("hausnummer");

                    b.Property<string>("Notiz")
                        .HasColumnType("text")
                        .HasColumnName("notiz");

                    b.Property<string>("Postleitzahl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("postleitzahl");

                    b.Property<string>("Stadt")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("stadt");

                    b.Property<string>("Strasse")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("strasse");

                    b.HasKey("AdresseId")
                        .HasName("pk_adressen");

                    b.ToTable("adressen", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Auth.Pbkdf2PasswordCredential", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Iterations")
                        .HasColumnType("integer")
                        .HasColumnName("iterations");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("bytea")
                        .HasColumnName("passwordhash");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("bytea")
                        .HasColumnName("salt");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("pk_pbkdf2passwordcredentials");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("ix_pbkdf2passwordcredentials_userid");

                    b.ToTable("pbkdf2passwordcredentials", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Auth.UserAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_useraccounts");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("ix_useraccounts_username");

                    b.ToTable("useraccounts", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Betriebskostenrechnung", b =>
                {
                    b.Property<int>("BetriebskostenrechnungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("betriebskostenrechnungid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BetriebskostenrechnungId"));

                    b.Property<double>("Betrag")
                        .HasColumnType("double precision")
                        .HasColumnName("betrag");

                    b.Property<int>("BetreffendesJahr")
                        .HasColumnType("integer")
                        .HasColumnName("betreffendesjahr");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datum");

                    b.Property<string>("Notiz")
                        .HasColumnType("text")
                        .HasColumnName("notiz");

                    b.Property<int>("UmlageId")
                        .HasColumnType("integer")
                        .HasColumnName("umlageid");

                    b.HasKey("BetriebskostenrechnungId")
                        .HasName("pk_betriebskostenrechnungen");

                    b.HasIndex("UmlageId")
                        .HasDatabaseName("ix_betriebskostenrechnungen_umlageid");

                    b.ToTable("betriebskostenrechnungen", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Erhaltungsaufwendung", b =>
                {
                    b.Property<int>("ErhaltungsaufwendungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("erhaltungsaufwendungid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ErhaltungsaufwendungId"));

                    b.Property<Guid>("AusstellerId")
                        .HasColumnType("uuid")
                        .HasColumnName("ausstellerid");

                    b.Property<double>("Betrag")
                        .HasColumnType("double precision")
                        .HasColumnName("betrag");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bezeichnung");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datum");

                    b.Property<string>("Notiz")
                        .HasColumnType("text")
                        .HasColumnName("notiz");

                    b.Property<int>("WohnungId")
                        .HasColumnType("integer")
                        .HasColumnName("wohnungid");

                    b.HasKey("ErhaltungsaufwendungId")
                        .HasName("pk_erhaltungsaufwendungen");

                    b.HasIndex("WohnungId")
                        .HasDatabaseName("ix_erhaltungsaufwendungen_wohnungid");

                    b.ToTable("erhaltungsaufwendungen", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Garage", b =>
                {
                    b.Property<int>("GarageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("garageid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GarageId"));

                    b.Property<int?>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("adresseid");

                    b.Property<Guid>("BesitzerId")
                        .HasColumnType("uuid")
                        .HasColumnName("besitzerid");

                    b.Property<int?>("JuristischePersonId")
                        .HasColumnType("integer")
                        .HasColumnName("juristischepersonid");

                    b.Property<string>("Kennung")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("kennung");

                    b.Property<string>("Notiz")
                        .HasColumnType("text")
                        .HasColumnName("notiz");

                    b.HasKey("GarageId")
                        .HasName("pk_garagen");

                    b.HasIndex("AdresseId")
                        .HasDatabaseName("ix_garagen_adresseid");

                    b.HasIndex("JuristischePersonId")
                        .HasDatabaseName("ix_garagen_juristischepersonid");

                    b.ToTable("garagen", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.HKVO", b =>
                {
                    b.Property<int>("HKVOId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("hkvoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HKVOId"));

                    b.Property<double?>("HKVO_P7")
                        .HasColumnType("double precision")
                        .HasColumnName("hkvo_p7");

                    b.Property<double?>("HKVO_P8")
                        .HasColumnType("double precision")
                        .HasColumnName("hkvo_p8");

                    b.Property<int?>("HKVO_P9")
                        .HasColumnType("integer")
                        .HasColumnName("hkvo_p9");

                    b.Property<string>("Notiz")
                        .HasColumnType("text")
                        .HasColumnName("notiz");

                    b.Property<int?>("ZaehlerId")
                        .HasColumnType("integer")
                        .HasColumnName("zaehlerid");

                    b.HasKey("HKVOId")
                        .HasName("pk_hkvo");

                    b.HasIndex("ZaehlerId")
                        .HasDatabaseName("ix_hkvo_zaehlerid");

                    b.ToTable("hkvo", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.JuristischePerson", b =>
                {
                    b.Property<int>("JuristischePersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("juristischepersonid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("JuristischePersonId"));

                    b.Property<int?>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("adresseid");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bezeichnung");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .HasColumnType("text")
                        .HasColumnName("fax");

                    b.Property<string>("Mobil")
                        .HasColumnType("text")
                        .HasColumnName("mobil");

                    b.Property<string>("Notiz")
                        .HasColumnType("text")
                        .HasColumnName("notiz");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uuid")
                        .HasColumnName("personid");

                    b.Property<string>("Telefon")
                        .HasColumnType("text")
                        .HasColumnName("telefon");

                    b.HasKey("JuristischePersonId")
                        .HasName("pk_juristischepersonen");

                    b.HasAlternateKey("PersonId")
                        .HasName("ak_juristischepersonen_personid");

                    b.HasIndex("AdresseId")
                        .HasDatabaseName("ix_juristischepersonen_adresseid");

                    b.ToTable("juristischepersonen", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Konto", b =>
                {
                    b.Property<int>("KontoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("kontoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("KontoId"));

                    b.Property<string>("Bank")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bank");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("iban");

                    b.Property<string>("Notiz")
                        .HasColumnType("text")
                        .HasColumnName("notiz");

                    b.HasKey("KontoId")
                        .HasName("pk_kontos");

                    b.ToTable("kontos", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Miete", b =>
                {
                    b.Property<int>("MieteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mieteid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MieteId"));

                    b.Property<double>("Betrag")
                        .HasColumnType("double precision")
                        .HasColumnName("betrag");

                    b.Property<DateTime>("BetreffenderMonat")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("betreffendermonat");

                    b.Property<string>("Notiz")
                        .HasColumnType("text")
                        .HasColumnName("notiz");

                    b.Property<int>("VertragId")
                        .HasColumnType("integer")
                        .HasColumnName("vertragid");

                    b.Property<DateTime>("Zahlungsdatum")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("zahlungsdatum");

                    b.HasKey("MieteId")
                        .HasName("pk_mieten");

                    b.HasIndex("VertragId")
                        .HasDatabaseName("ix_mieten_vertragid");

                    b.ToTable("mieten", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Mieter", b =>
                {
                    b.Property<int>("MieterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mieterid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MieterId"));

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uuid")
                        .HasColumnName("personid");

                    b.Property<int>("VertragId")
                        .HasColumnType("integer")
                        .HasColumnName("vertragid");

                    b.HasKey("MieterId")
                        .HasName("pk_mieterset");

                    b.HasIndex("VertragId")
                        .HasDatabaseName("ix_mieterset_vertragid");

                    b.ToTable("mieterset", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Mietminderung", b =>
                {
                    b.Property<int>("MietminderungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mietminderungid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MietminderungId"));

                    b.Property<DateTime>("Beginn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("beginn");

                    b.Property<DateTime?>("Ende")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ende");

                    b.Property<double>("Minderung")
                        .HasColumnType("double precision")
                        .HasColumnName("minderung");

                    b.Property<string>("Notiz")
                        .HasColumnType("text")
                        .HasColumnName("notiz");

                    b.Property<int>("VertragId")
                        .HasColumnType("integer")
                        .HasColumnName("vertragid");

                    b.HasKey("MietminderungId")
                        .HasName("pk_mietminderungen");

                    b.HasIndex("VertragId")
                        .HasDatabaseName("ix_mietminderungen_vertragid");

                    b.ToTable("mietminderungen", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.NatuerlichePerson", b =>
                {
                    b.Property<int>("NatuerlichePersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("natuerlichepersonid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NatuerlichePersonId"));

                    b.Property<int?>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("adresseid");

                    b.Property<int>("Anrede")
                        .HasColumnType("integer")
                        .HasColumnName("anrede");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .HasColumnType("text")
                        .HasColumnName("fax");

                    b.Property<string>("Mobil")
                        .HasColumnType("text")
                        .HasColumnName("mobil");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nachname");

                    b.Property<string>("Notiz")
                        .HasColumnType("text")
                        .HasColumnName("notiz");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uuid")
                        .HasColumnName("personid");

                    b.Property<string>("Telefon")
                        .HasColumnType("text")
                        .HasColumnName("telefon");

                    b.Property<int>("Titel")
                        .HasColumnType("integer")
                        .HasColumnName("titel");

                    b.Property<string>("Vorname")
                        .HasColumnType("text")
                        .HasColumnName("vorname");

                    b.HasKey("NatuerlichePersonId")
                        .HasName("pk_natuerlichepersonen");

                    b.HasAlternateKey("PersonId")
                        .HasName("ak_natuerlichepersonen_personid");

                    b.HasIndex("AdresseId")
                        .HasDatabaseName("ix_natuerlichepersonen_adresseid");

                    b.ToTable("natuerlichepersonen", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Umlage", b =>
                {
                    b.Property<int>("UmlageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("umlageid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UmlageId"));

                    b.Property<string>("Beschreibung")
                        .HasColumnType("text")
                        .HasColumnName("beschreibung");

                    b.Property<int?>("HKVOId")
                        .HasColumnType("integer")
                        .HasColumnName("hkvoid");

                    b.Property<string>("Notiz")
                        .HasColumnType("text")
                        .HasColumnName("notiz");

                    b.Property<int>("Schluessel")
                        .HasColumnType("integer")
                        .HasColumnName("schluessel");

                    b.Property<int>("Typ")
                        .HasColumnType("integer")
                        .HasColumnName("typ");

                    b.Property<int?>("ZaehlerId")
                        .HasColumnType("integer")
                        .HasColumnName("zaehlerid");

                    b.HasKey("UmlageId")
                        .HasName("pk_umlagen");

                    b.HasIndex("HKVOId")
                        .HasDatabaseName("ix_umlagen_hkvoid");

                    b.HasIndex("ZaehlerId")
                        .HasDatabaseName("ix_umlagen_zaehlerid");

                    b.ToTable("umlagen", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Vertrag", b =>
                {
                    b.Property<int>("VertragId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vertragid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VertragId"));

                    b.Property<Guid?>("AnsprechpartnerId")
                        .HasColumnType("uuid")
                        .HasColumnName("ansprechpartnerid");

                    b.Property<DateTime?>("Ende")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ende");

                    b.Property<string>("Notiz")
                        .HasColumnType("text")
                        .HasColumnName("notiz");

                    b.Property<int>("WohnungId")
                        .HasColumnType("integer")
                        .HasColumnName("wohnungid");

                    b.HasKey("VertragId")
                        .HasName("pk_vertraege");

                    b.HasIndex("WohnungId")
                        .HasDatabaseName("ix_vertraege_wohnungid");

                    b.ToTable("vertraege", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.VertragVersion", b =>
                {
                    b.Property<int>("VertragVersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vertragversionid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VertragVersionId"));

                    b.Property<DateTime>("Beginn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("beginn");

                    b.Property<double>("Grundmiete")
                        .HasColumnType("double precision")
                        .HasColumnName("grundmiete");

                    b.Property<string>("Notiz")
                        .HasColumnType("text")
                        .HasColumnName("notiz");

                    b.Property<int>("Personenzahl")
                        .HasColumnType("integer")
                        .HasColumnName("personenzahl");

                    b.Property<int>("VertragId")
                        .HasColumnType("integer")
                        .HasColumnName("vertragid");

                    b.HasKey("VertragVersionId")
                        .HasName("pk_vertragversionen");

                    b.HasIndex("VertragId")
                        .HasDatabaseName("ix_vertragversionen_vertragid");

                    b.ToTable("vertragversionen", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Wohnung", b =>
                {
                    b.Property<int>("WohnungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("wohnungid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WohnungId"));

                    b.Property<int?>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("adresseid");

                    b.Property<Guid>("BesitzerId")
                        .HasColumnType("uuid")
                        .HasColumnName("besitzerid");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bezeichnung");

                    b.Property<int?>("JuristischePersonId")
                        .HasColumnType("integer")
                        .HasColumnName("juristischepersonid");

                    b.Property<string>("Notiz")
                        .HasColumnType("text")
                        .HasColumnName("notiz");

                    b.Property<int>("Nutzeinheit")
                        .HasColumnType("integer")
                        .HasColumnName("nutzeinheit");

                    b.Property<double>("Nutzflaeche")
                        .HasColumnType("double precision")
                        .HasColumnName("nutzflaeche");

                    b.Property<double>("Wohnflaeche")
                        .HasColumnType("double precision")
                        .HasColumnName("wohnflaeche");

                    b.HasKey("WohnungId")
                        .HasName("pk_wohnungen");

                    b.HasIndex("AdresseId")
                        .HasDatabaseName("ix_wohnungen_adresseid");

                    b.HasIndex("JuristischePersonId")
                        .HasDatabaseName("ix_wohnungen_juristischepersonid");

                    b.ToTable("wohnungen", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Zaehler", b =>
                {
                    b.Property<int>("ZaehlerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("zaehlerid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ZaehlerId"));

                    b.Property<int?>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("adresseid");

                    b.Property<int?>("AllgemeinzaehlerZaehlerId")
                        .HasColumnType("integer")
                        .HasColumnName("allgemeinzaehlerzaehlerid");

                    b.Property<string>("Kennnummer")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("kennnummer");

                    b.Property<string>("Notiz")
                        .HasColumnType("text")
                        .HasColumnName("notiz");

                    b.Property<int>("Typ")
                        .HasColumnType("integer")
                        .HasColumnName("typ");

                    b.Property<int?>("WohnungId")
                        .HasColumnType("integer")
                        .HasColumnName("wohnungid");

                    b.HasKey("ZaehlerId")
                        .HasName("pk_zaehlerset");

                    b.HasIndex("AdresseId")
                        .HasDatabaseName("ix_zaehlerset_adresseid");

                    b.HasIndex("AllgemeinzaehlerZaehlerId")
                        .HasDatabaseName("ix_zaehlerset_allgemeinzaehlerzaehlerid");

                    b.HasIndex("WohnungId")
                        .HasDatabaseName("ix_zaehlerset_wohnungid");

                    b.ToTable("zaehlerset", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Zaehlerstand", b =>
                {
                    b.Property<int>("ZaehlerstandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("zaehlerstandid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ZaehlerstandId"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datum");

                    b.Property<string>("Notiz")
                        .HasColumnType("text")
                        .HasColumnName("notiz");

                    b.Property<double>("Stand")
                        .HasColumnType("double precision")
                        .HasColumnName("stand");

                    b.Property<int>("ZaehlerId")
                        .HasColumnType("integer")
                        .HasColumnName("zaehlerid");

                    b.HasKey("ZaehlerstandId")
                        .HasName("pk_zaehlerstaende");

                    b.HasIndex("ZaehlerId")
                        .HasDatabaseName("ix_zaehlerstaende_zaehlerid");

                    b.ToTable("zaehlerstaende", (string)null);
                });

            modelBuilder.Entity("GarageVertrag", b =>
                {
                    b.Property<int>("GaragenGarageId")
                        .HasColumnType("integer")
                        .HasColumnName("garagengarageid");

                    b.Property<int>("VertraegeVertragId")
                        .HasColumnType("integer")
                        .HasColumnName("vertraegevertragid");

                    b.HasKey("GaragenGarageId", "VertraegeVertragId")
                        .HasName("pk_garagevertrag");

                    b.HasIndex("VertraegeVertragId")
                        .HasDatabaseName("ix_garagevertrag_vertraegevertragid");

                    b.ToTable("garagevertrag", (string)null);
                });

            modelBuilder.Entity("JuristischePersonJuristischePerson", b =>
                {
                    b.Property<int>("JuristischeMitgliederJuristischePersonId")
                        .HasColumnType("integer")
                        .HasColumnName("juristischemitgliederjuristischepersonid");

                    b.Property<int>("JuristischePersonenJuristischePersonId")
                        .HasColumnType("integer")
                        .HasColumnName("juristischepersonenjuristischepersonid");

                    b.HasKey("JuristischeMitgliederJuristischePersonId", "JuristischePersonenJuristischePersonId")
                        .HasName("pk_juristischepersonjuristischeperson");

                    b.HasIndex("JuristischePersonenJuristischePersonId")
                        .HasDatabaseName("ix_juristischepersonjuristischeperson_juristischepersonenjuris~");

                    b.ToTable("juristischepersonjuristischeperson", (string)null);
                });

            modelBuilder.Entity("JuristischePersonNatuerlichePerson", b =>
                {
                    b.Property<int>("JuristischePersonenJuristischePersonId")
                        .HasColumnType("integer")
                        .HasColumnName("juristischepersonenjuristischepersonid");

                    b.Property<int>("NatuerlicheMitgliederNatuerlichePersonId")
                        .HasColumnType("integer")
                        .HasColumnName("natuerlichemitgliedernatuerlichepersonid");

                    b.HasKey("JuristischePersonenJuristischePersonId", "NatuerlicheMitgliederNatuerlichePersonId")
                        .HasName("pk_juristischepersonnatuerlicheperson");

                    b.HasIndex("NatuerlicheMitgliederNatuerlichePersonId")
                        .HasDatabaseName("ix_juristischepersonnatuerlicheperson_natuerlichemitgliedernat~");

                    b.ToTable("juristischepersonnatuerlicheperson", (string)null);
                });

            modelBuilder.Entity("UmlageWohnung", b =>
                {
                    b.Property<int>("UmlagenUmlageId")
                        .HasColumnType("integer")
                        .HasColumnName("umlagenumlageid");

                    b.Property<int>("WohnungenWohnungId")
                        .HasColumnType("integer")
                        .HasColumnName("wohnungenwohnungid");

                    b.HasKey("UmlagenUmlageId", "WohnungenWohnungId")
                        .HasName("pk_umlagewohnung");

                    b.HasIndex("WohnungenWohnungId")
                        .HasDatabaseName("ix_umlagewohnung_wohnungenwohnungid");

                    b.ToTable("umlagewohnung", (string)null);
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Auth.Pbkdf2PasswordCredential", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Auth.UserAccount", "User")
                        .WithOne("Pbkdf2PasswordCredential")
                        .HasForeignKey("Deeplex.Saverwalter.Model.Auth.Pbkdf2PasswordCredential", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_pbkdf2passwordcredentials_useraccounts_userid");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Betriebskostenrechnung", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Umlage", "Umlage")
                        .WithMany("Betriebskostenrechnungen")
                        .HasForeignKey("UmlageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_betriebskostenrechnungen_umlagen_umlageid");

                    b.Navigation("Umlage");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Erhaltungsaufwendung", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Wohnung", "Wohnung")
                        .WithMany("Erhaltungsaufwendungen")
                        .HasForeignKey("WohnungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_erhaltungsaufwendungen_wohnungen_wohnungid");

                    b.Navigation("Wohnung");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Garage", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Adresse", "Adresse")
                        .WithMany("Garagen")
                        .HasForeignKey("AdresseId")
                        .HasConstraintName("fk_garagen_adressen_adresseid");

                    b.HasOne("Deeplex.Saverwalter.Model.JuristischePerson", null)
                        .WithMany("Garagen")
                        .HasForeignKey("JuristischePersonId")
                        .HasConstraintName("fk_garagen_juristischepersonen_juristischepersonid");

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.HKVO", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Zaehler", "Zaehler")
                        .WithMany()
                        .HasForeignKey("ZaehlerId")
                        .HasConstraintName("fk_hkvo_zaehlerset_zaehlerid");

                    b.Navigation("Zaehler");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.JuristischePerson", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Adresse", "Adresse")
                        .WithMany("JuristischePersonen")
                        .HasForeignKey("AdresseId")
                        .HasConstraintName("fk_juristischepersonen_adressen_adresseid");

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Miete", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Vertrag", "Vertrag")
                        .WithMany("Mieten")
                        .HasForeignKey("VertragId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_mieten_vertraege_vertragid");

                    b.Navigation("Vertrag");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Mieter", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Vertrag", "Vertrag")
                        .WithMany()
                        .HasForeignKey("VertragId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_mieterset_vertraege_vertragid");

                    b.Navigation("Vertrag");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Mietminderung", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Vertrag", "Vertrag")
                        .WithMany("Mietminderungen")
                        .HasForeignKey("VertragId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_mietminderungen_vertraege_vertragid");

                    b.Navigation("Vertrag");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.NatuerlichePerson", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Adresse", "Adresse")
                        .WithMany("NatuerlichePersonen")
                        .HasForeignKey("AdresseId")
                        .HasConstraintName("fk_natuerlichepersonen_adressen_adresseid");

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Umlage", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.HKVO", "HKVO")
                        .WithMany()
                        .HasForeignKey("HKVOId")
                        .HasConstraintName("fk_umlagen_hkvo_hkvoid");

                    b.HasOne("Deeplex.Saverwalter.Model.Zaehler", "Zaehler")
                        .WithMany()
                        .HasForeignKey("ZaehlerId")
                        .HasConstraintName("fk_umlagen_zaehlerset_zaehlerid");

                    b.Navigation("HKVO");

                    b.Navigation("Zaehler");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Vertrag", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Wohnung", "Wohnung")
                        .WithMany("Vertraege")
                        .HasForeignKey("WohnungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_vertraege_wohnungen_wohnungid");

                    b.Navigation("Wohnung");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.VertragVersion", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Vertrag", "Vertrag")
                        .WithMany("Versionen")
                        .HasForeignKey("VertragId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_vertragversionen_vertraege_vertragid");

                    b.Navigation("Vertrag");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Wohnung", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Adresse", "Adresse")
                        .WithMany("Wohnungen")
                        .HasForeignKey("AdresseId")
                        .HasConstraintName("fk_wohnungen_adressen_adresseid");

                    b.HasOne("Deeplex.Saverwalter.Model.JuristischePerson", null)
                        .WithMany("Wohnungen")
                        .HasForeignKey("JuristischePersonId")
                        .HasConstraintName("fk_wohnungen_juristischepersonen_juristischepersonid");

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Zaehler", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Adresse", "Adresse")
                        .WithMany("Zaehler")
                        .HasForeignKey("AdresseId")
                        .HasConstraintName("fk_zaehlerset_adressen_adresseid");

                    b.HasOne("Deeplex.Saverwalter.Model.Zaehler", "Allgemeinzaehler")
                        .WithMany("EinzelZaehler")
                        .HasForeignKey("AllgemeinzaehlerZaehlerId")
                        .HasConstraintName("fk_zaehlerset_zaehlerset_allgemeinzaehlerzaehlerid");

                    b.HasOne("Deeplex.Saverwalter.Model.Wohnung", "Wohnung")
                        .WithMany("Zaehler")
                        .HasForeignKey("WohnungId")
                        .HasConstraintName("fk_zaehlerset_wohnungen_wohnungid");

                    b.Navigation("Adresse");

                    b.Navigation("Allgemeinzaehler");

                    b.Navigation("Wohnung");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Zaehlerstand", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Zaehler", "Zaehler")
                        .WithMany("Staende")
                        .HasForeignKey("ZaehlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_zaehlerstaende_zaehlerset_zaehlerid");

                    b.Navigation("Zaehler");
                });

            modelBuilder.Entity("GarageVertrag", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Garage", null)
                        .WithMany()
                        .HasForeignKey("GaragenGarageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_garagevertrag_garagen_garagengarageid");

                    b.HasOne("Deeplex.Saverwalter.Model.Vertrag", null)
                        .WithMany()
                        .HasForeignKey("VertraegeVertragId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_garagevertrag_vertraege_vertraegevertragid");
                });

            modelBuilder.Entity("JuristischePersonJuristischePerson", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.JuristischePerson", null)
                        .WithMany()
                        .HasForeignKey("JuristischeMitgliederJuristischePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_juristischepersonjuristischeperson_juristischepersonen_juri~");

                    b.HasOne("Deeplex.Saverwalter.Model.JuristischePerson", null)
                        .WithMany()
                        .HasForeignKey("JuristischePersonenJuristischePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_juristischepersonjuristischeperson_juristischepersonen_jur~1");
                });

            modelBuilder.Entity("JuristischePersonNatuerlichePerson", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.JuristischePerson", null)
                        .WithMany()
                        .HasForeignKey("JuristischePersonenJuristischePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_juristischepersonnatuerlicheperson_juristischepersonen_juri~");

                    b.HasOne("Deeplex.Saverwalter.Model.NatuerlichePerson", null)
                        .WithMany()
                        .HasForeignKey("NatuerlicheMitgliederNatuerlichePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_juristischepersonnatuerlicheperson_natuerlichepersonen_natu~");
                });

            modelBuilder.Entity("UmlageWohnung", b =>
                {
                    b.HasOne("Deeplex.Saverwalter.Model.Umlage", null)
                        .WithMany()
                        .HasForeignKey("UmlagenUmlageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_umlagewohnung_umlagen_umlagenumlageid");

                    b.HasOne("Deeplex.Saverwalter.Model.Wohnung", null)
                        .WithMany()
                        .HasForeignKey("WohnungenWohnungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_umlagewohnung_wohnungen_wohnungenwohnungid");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Adresse", b =>
                {
                    b.Navigation("Garagen");

                    b.Navigation("JuristischePersonen");

                    b.Navigation("NatuerlichePersonen");

                    b.Navigation("Wohnungen");

                    b.Navigation("Zaehler");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Auth.UserAccount", b =>
                {
                    b.Navigation("Pbkdf2PasswordCredential");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.JuristischePerson", b =>
                {
                    b.Navigation("Garagen");

                    b.Navigation("Wohnungen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Umlage", b =>
                {
                    b.Navigation("Betriebskostenrechnungen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Vertrag", b =>
                {
                    b.Navigation("Mieten");

                    b.Navigation("Mietminderungen");

                    b.Navigation("Versionen");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Wohnung", b =>
                {
                    b.Navigation("Erhaltungsaufwendungen");

                    b.Navigation("Vertraege");

                    b.Navigation("Zaehler");
                });

            modelBuilder.Entity("Deeplex.Saverwalter.Model.Zaehler", b =>
                {
                    b.Navigation("EinzelZaehler");

                    b.Navigation("Staende");
                });
#pragma warning restore 612, 618
        }
    }
}
